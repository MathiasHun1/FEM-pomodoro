@use './styles/abstactions' as *;

.app {
  font-family: var(--ff-primary), sans-serif;
  font-weight: bold;
  min-height: 100%;
  background-color: var(--clr-blue-medium);
  padding-top: 2rem;
  display: grid;
  justify-items: center;
  position: relative;
  grid-template-rows: min-content;

  @media (min-width: $breakpoint-small) {
    padding-top: 5rem;
    grid-template-rows: 12rem;
    isolation: isolate;
    min-height: 900px;
    height: 100%;
  }
}

.app * {
  font-family: inherit;
}

.header {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 3rem;
  z-index: 20;
}

.header img {
  width: 10rem;
  min-width: 10rem;
}

.header__controls {
  background-color: var(--clr-blue-dark);
  width: clamp(20rem, 70vw, 24rem);
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  border-radius: 9999px;
  padding: 8px;
}

.header__controls > button {
  font-size: var(--fs-XXS);
  background-color: transparent;
  color: var(--clr-blue-light);
  opacity: 0.4;
  border: none;
  padding-block: 1.125rem;
  border-radius: 9999px;
  cursor: pointer;
}

.header__controls > button.active {
  background-color: var(--clr-primary) !important;
  opacity: 1 !important;
  color: var(--clr-blue-dark) !important;
}

.header__controls > button:hover {
  opacity: revert;
}

.display-wrapper {
  margin-top: 3rem;
  aspect-ratio: 1;
  position: relative;
  width: 75%;
  max-width: 26rem;
  height: min-content;
}

.display-wrapper:before {
  --shadow-light: hsl(234, 33%, 27%);
  --shadow-dark: hsl(235, 49%, 8%);

  position: absolute;
  content: '';
  inset: 0;
  background-image: conic-gradient(
    from -90deg,
    var(--clr-blue-dark) 25%,
    var(--shadow-light),
    var(--clr-blue-dark)
  );
  border-radius: 50%;
  transform: scale(1.1);

  box-shadow: -40px -40px 80px var(--shadow-light),
    40px 40px 80px var(--clr-blue-dark);
}

.display {
  background-color: var(--clr-blue-dark);
  color: var(--clr-blue-light);
  display: grid;
  width: 100%;
  aspect-ratio: 1;
  place-items: center;
  font-size: var(--fs-XL);
  border-radius: 50%;
  position: relative;
}

.display__clock {
  text-align: center;
}

.display__clock > p {
  width: min-content;
  position: relative;
  margin-inline: auto;

  span {
    display: inline-block;
    position: absolute;
  }
}

.display__clock .minute {
  left: 0;
  transform: translateX(-100%);
}

.display__clock-control-button {
  display: none;
  background: none;
  border: none;
  padding: 0;
  color: var(--clr-blue-light);
  text-transform: uppercase;
  font-size: var(--fs-M);
  padding-left: 15px;
  letter-spacing: 15px;
  margin-inline: auto;
}

.display__clock-control-button:hover {
  cursor: pointer;
  color: var(--clr-primary);
}

//------------- Form styles -----------------
.settings-button {
  cursor: pointer;
  place-self: center;
}

.settings-form-wrapper {
  position: absolute;
  inset: 0;
  background-color: rgba(black, 0.5);
  display: grid;
  place-items: center;
  z-index: 30;
}

.settings-form {
  width: 100%;
  max-width: 33.75rem;
  padding: 1.5rem;
  background-color: white;
  border-radius: 1rem;
  position: relative;
}

.settings-form section {
  padding-block: 1.5rem;
}

.form__header {
  padding-bottom: 1.5rem;
}

.form__sub-title {
  font-size: var(--fs-XS);
  color: black;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 4.2px;
  margin-bottom: 1.5rem;

  @media (min-width: $breakpoint-small) {
    margin-bottom: 0;
  }
}

.form__time-section .form__sub-title {
  margin-bottom: 1.5rem;
}

.form__sub-title .form__submit-button {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%) translateY(50%);
}

.form__time-input-wrapper {
  @media (min-width: $breakpoint-small) {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    column-gap: 1.5rem;
  }
}

.form__time-input {
  display: grid;
  grid-template-columns: 1fr 1fr;
  align-items: center;
  color: hsla(235, 25%, 15%, 0.4);
  font-size: var(--fs-XXS);

  & input {
    min-width: 0;
    padding: 0.8rem 1rem;
    font-size: var(fs-S);
    background-color: var(--clr-blue-ultalight);
    border: none;
    border-radius: 10px;
  }

  @media (min-width: $breakpoint-small) {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1rf;
    row-gap: 0.5em;
  }
}

.form__font-section,
.form__color-section {
  display: flex;
  flex-direction: column;
  align-items: center;

  @media (min-width: $breakpoint-small) {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }
}

.form__font-section .button-circle {
  background-color: var(--clr-blue-ultalight);
  color: rgba(var(--clr-blue-medium), 0.75);
}

.form__font-section button.active {
  background-color: var(--clr-blue-dark);
  color: white;
}

.form__font-section button:nth-of-type(1) {
  font-family: var(--ff-sans);
}

.form__font-section button:nth-of-type(2) {
  font-family: var(--ff-roboto);
}

.form__font-section button:nth-of-type(3) {
  font-family: var(--ff-mono);
}

.form__color-section button:nth-of-type(1) {
  background-color: $clr-red !important;
}

.form__color-section button:nth-of-type(2) {
  background-color: $clr-cyan;
}

.form__color-section button:nth-of-type(3) {
  background-color: $clr-purple;
}

.form__color-section button.active {
  background-image: url('./assets/icon-checkmark.svg');
  background-position: center;
  background-size: 16px 16px;
  background-repeat: no-repeat;
}

.form__submit-button {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%) translateY(50%);
  background-color: var(--clr-primary);
  padding: 0.8rem 2rem;
  border: none;
  border-radius: 9999px;
  color: white;
  cursor: pointer;
}

.settings-form section {
  border-bottom: 2px solid hsla(0, 0%, 59%, 0.1);
}

.settings-form section:last-of-type {
  border-bottom: none;
}

/* --- making the progress bar SVG --- */

.progress-bar-svg {
  position: absolute;
  inset: 0;
  transform: rotate(-90deg);
  pointer-events: none;
  width: 100%;
  height: 100%;
}

.progress-bar__progress {
  fill: none;
  stroke: var(--clr-primary);
  stroke-width: 3;
  stroke-linecap: round;
  stroke-dasharray: var(--progress-length);
  stroke-dashoffset: calc(var(--progress-value) * var(--progress-length));
  transition: stroke-dashoffset 0.98s linear;
}
